# This is a basic workflow to help you get started with Actions

name: Translations

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      languages:
        description: 'csv languages to translate to'     
        required: true
        default: 'cs-cz,sk-sk,pl-pl,ro-ro,hu-hu'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  translate:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with: 
          ref: translate
      # Runs a set of commands using the runners shell
      - name: Translate
        shell: pwsh
        env: 
          ocp_opim_key: ${{secrets.OCPAPIMSUBSCRIPTIONKEY}}
        run: |
          foreach($l in "${{ github.event.inputs.languages }}" -split ",")
          {
              .\CustomTranslations\Translate.ps1 -language $l
          }
        
      - name: Commit
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com 
          git add --all
          git commit -m "Translations"
          git push
      
      - name: GitHub Pull Request Action
        uses: repo-sync/pull-request@v2.6
        with:
          # Branch name to pull from, default is triggered branch
          source_branch: translate
          # Branch name to sync to in this repo, default is master
          destination_branch: main
          # Pull request title
          pr_title: Review the translations
          # Pull request reviewers, comma-separated list (no spaces)
          pr_reviewer: petrmo
          github_token: ${{secrets.GITHUB_TOKEN}}
          
  acceptPR:
    needs: translate
    runs-on: windows-latest
    environment: Repo
    steps:
      - name: MergePR
        run: echo "Just merging if really merging"
      
          
          

          
