# This is a basic workflow to help you get started with Actions

name: Create a release

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      sourceBranch:
        description: 'Branch'     
        required: true
        default: 'translate'       
  workflow_call:
    inputs:
      sourceBranch:
        description: 'Branch'     
        required: true
        default: 'translate'
        type: string
        
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  BuildWebPart:
    if: false
    uses: petrmo/custom-learning-office-365/.github/workflows/BuildWebParts.yml@main
    with:
      sourceBranch: ${{ github.event.inputs.sourceBranch }}
  
  PackManifest:
    uses: petrmo/custom-learning-office-365/.github/workflows/ZipTeamsPlugin.yml@main
    with:
      sourceBranch: ${{ github.event.inputs.sourceBranch }}          

  Release:
    needs: [PackManifest]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.sourceBranch }}
      - name: Get version
        shell: pwsh
        run: |
          $package = Get-Content "src\webpart\package.json" -Encoding UTF8 | Out-String | ConvertFrom-Json
          echo "version=$($package.version)" >> $GITHUB_ENV
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.10
        with:
          # Artifact name
          name: TeamsPlugin
          
      - name: Create Release
        uses: ncipollo/release-action@v1.8.10
        with:
          # An optional flag which indicates if we should update a release if it already exists. Defaults to false.
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: README.md,*.zip 
          body: "A release for ${{github.event.inputs.sourceBranch}}, ${{github.ref}}, ${{github.sha}} by ${{ github.actor }}"
          tag: v${{ env.version }}

